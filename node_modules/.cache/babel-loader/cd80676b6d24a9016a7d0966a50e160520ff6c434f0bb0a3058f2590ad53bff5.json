{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(_ref) {\n  _s();\n  let {\n    x,\n    y,\n    cells,\n    setCells\n  } = _ref;\n  let cell = cells[x][y];\n  const info = cell.info;\n  const [isFocused, setIsFocused] = useState(false);\n  const handleChange = event => {\n    cells[x][y] = {\n      ...cell,\n      info: {\n        ...info,\n        method: event.target.value\n      }\n    };\n    setCells([...cells]);\n  };\n  const handleBlur = () => {\n    let sum = info.method;\n    if (info.method.startsWith('=') && info.method.length > 1) {\n      sum = doSum(info.method, 0);\n    }\n    cells[x][y] = {\n      ...cell,\n      info: {\n        value: sum,\n        method: info.method\n      }\n    };\n    setCells([...cells]);\n    setIsFocused(false);\n  };\n  const doSum = (val, sum) => {\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n    if (indexSum > indexSub) {\n      let indexAux = val.slice(indexSum + 1, val.length).indexOf('+');\n      if (indexAux > 0) {\n        sum += checkCell(val.slice(1, indexSum));\n        return doSum(val.slice(indexSum + 1, val.length), sum);\n      } else {\n        sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length));\n        return sum;\n        //cell.value = sum\n      }\n    } // else if (indexSub > indexSum) {\n    //cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    //}\n  };\n  // convertir letra a num\n  //fijars en cells coord y sacar value\n  const checkCell = coord => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    let toReturn;\n    console.log(coord);\n    try {\n      toReturn = parseInt(coord);\n    } catch (error) {\n      let letter = coord.slice(1, 2);\n      console.log(letter);\n      let coordX = letters.indexOf(letter);\n      console.log(coordX);\n      toReturn = parseInt(cells[coordX][parseInt(coord.slice(2, 3))]);\n    }\n    console.log(toReturn);\n    return toReturn;\n  };\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"tdinput border-2 border-slate-300\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${x}${y}`,\n      size: \"10\",\n      type: \"input\",\n      value: isFocused ? info.method : info.value,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Cell, \"taoS6m9NZex5dx3pinefKTdpShE=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","x","y","cells","setCells","cell","info","isFocused","setIsFocused","handleChange","event","method","target","value","handleBlur","sum","startsWith","length","doSum","val","indexSum","indexOf","indexSub","indexAux","slice","checkCell","coord","letters","split","toReturn","console","log","parseInt","error","letter","coordX","handleFocus"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell({ x, y, cells, setCells }) {\n  let cell = cells[x][y];\n  const info = cell.info;\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleChange = (event) => {\n    cells[x][y] = { ...cell, info: { ...info, method: event.target.value } };\n    setCells([...cells])\n  }\n\n  const handleBlur = () => {\n    let sum = info.method;\n    if (info.method.startsWith('=') && info.method.length > 1) {\n      sum = doSum(info.method, 0);\n    }\n    cells[x][y] = { ...cell, info: { value: sum, method: info.method } };\n    setCells([...cells])\n    setIsFocused(false);\n  }\n\n  const doSum = (val, sum) => {\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n\n    if (indexSum > indexSub) {\n      let indexAux = val.slice(indexSum + 1, val.length).indexOf('+')\n      if (indexAux > 0) {\n        sum += checkCell(val.slice(1, indexSum));\n        return doSum(val.slice(indexSum + 1, val.length), sum);\n      } else {\n        sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length))\n        return sum\n        //cell.value = sum\n      }\n    }// else if (indexSub > indexSum) {\n    //cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    //}\n\n  }\n  // convertir letra a num\n  //fijars en cells coord y sacar value\n  const checkCell = (coord) => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\n    let toReturn;\n    console.log(coord);\n    try {\n      toReturn = parseInt(coord);\n    } catch (error) {\n      let letter = coord.slice(1, 2);\n      console.log(letter)\n      let coordX = letters.indexOf(letter);\n      console.log(coordX);\n      toReturn = parseInt(cells[coordX][parseInt(coord.slice(2, 3))]);\n    }\n    console.log(toReturn);\n    return toReturn;\n  }\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  }\n\n  return (\n    <td className=\"tdinput border-2 border-slate-300\">\n      <input id={`${x}${y}`} size={\"10\"} type=\"input\" value={isFocused ? info.method : info.value} onChange={handleChange} onBlur={handleBlur} onFocus={handleFocus}></input>\n    </td>\n  );\n}\n\nexport default Cell;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}