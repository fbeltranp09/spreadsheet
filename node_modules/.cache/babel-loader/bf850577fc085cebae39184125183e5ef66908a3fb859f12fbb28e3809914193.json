{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell() {\n  _s();\n  const [value, setValue] = useState('');\n  const handleChange = event => {\n    console.log(event.target.value);\n    setValue(event.target.value);\n  };\n  const handleBlur = () => {\n    if (value.startsWith('=')) {\n      doSum(value);\n    }\n  };\n  const doSum = val => {\n    let index = val.indexOf('+');\n    setValue(parseInt(val.slice(1, index)) + parseInt(val.slice(index + 1, val.length)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cell inline\",\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tdinput border border-slate-300\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        size: \"10\",\n        type: \"input\",\n        value: value,\n        onChange: handleChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Cell, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","value","setValue","handleChange","event","console","log","target","handleBlur","startsWith","doSum","val","index","indexOf","parseInt","slice","length"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell() {\n  const [value, setValue] = useState('')\n\n  const handleChange = (event) => {\n    console.log(event.target.value)\n    setValue(event.target.value)\n  }\n\n  const handleBlur = () => {\n    if (value.startsWith('=')){\n      doSum(value)\n    }\n  }\n\n  const doSum = (val) => {\n    let index = val.indexOf('+')\n    setValue(parseInt(val.slice(1,index)) + parseInt(val.slice(index+1,val.length)))\n  }\n\n  return (\n    <div className=\"table-cell inline\">\n      <td className=\"tdinput border border-slate-300\">\n        <input size={\"10\"}  type=\"input\" value={value} onChange={handleChange} onBlur={handleBlur}></input>\n      </td>\n    </div>\n    \n  );\n}\n\nexport default Cell;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC;IAC/BC,QAAQ,CAACE,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMO,UAAU,GAAG,MAAM;IACvB,IAAIP,KAAK,CAACQ,UAAU,CAAC,GAAG,CAAC,EAAC;MACxBC,KAAK,CAACT,KAAK,CAAC;IACd;EACF,CAAC;EAED,MAAMS,KAAK,GAAIC,GAAG,IAAK;IACrB,IAAIC,KAAK,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;IAC5BX,QAAQ,CAACY,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAACH,KAAK,CAAC,CAAC,GAAGE,QAAQ,CAACH,GAAG,CAACI,KAAK,CAACH,KAAK,GAAC,CAAC,EAACD,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC;EAClF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,uBAChC;MAAI,SAAS,EAAC,iCAAiC;MAAA,uBAC7C;QAAO,IAAI,EAAE,IAAK;QAAE,IAAI,EAAC,OAAO;QAAC,KAAK,EAAEf,KAAM;QAAC,QAAQ,EAAEE,YAAa;QAAC,MAAM,EAAEK;MAAW;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA;EAChG;IAAA;IAAA;IAAA;EAAA,QACD;AAGV;AAAC,GA3BQR,IAAI;AAAA,KAAJA,IAAI;AA6Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}