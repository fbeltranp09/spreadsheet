{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(_ref) {\n  _s();\n  let {\n    x,\n    y\n  } = _ref;\n  const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n  const columns = [];\n  const heads = [];\n  const [cells, setCells] = useState([]);\n  for (let i = 0; i <= x; i++) {\n    const rows = [];\n    for (let j = 0; j <= y; j++) {\n      if (i === 0) {\n        heads.push( /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-slate-200 border-2 border-slate-300\",\n          children: letters[j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }, this));\n      } else if (j === 0) {\n        rows.push( /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-slate-200 border-2 border-slate-300\",\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }, this));\n      } else {\n        rows.push( /*#__PURE__*/_jsxDEV(Cell, {\n          x: letters[j],\n          y: i.toString(),\n          cell: {\n            value: '',\n            method: ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this));\n      }\n    }\n    columns.push([rows]);\n  }\n  const rendered = columns.map(column => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: column\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: heads\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rendered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"9zjnsC1kUd6PYoVE5KeGE6GzgRE=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useState","Cell","Table","x","y","letters","split","columns","heads","cells","setCells","i","rows","j","push","toString","value","method","rendered","map","column"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Table.js"],"sourcesContent":["import { useState } from \"react\";\nimport Cell from \"./Cell\";\n\nfunction Table({x, y}) {\n  const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n  const columns = [];\n  const heads = [];\n\n  const [cells, setCells]= useState([])\n  \n  for (let i = 0; i <= x; i++) {\n    const rows = [];\n    for(let j = 0; j <= y; j++){\n      if (i===0){\n        heads.push(<th className=\"bg-slate-200 border-2 border-slate-300\">{letters[j] }</th>);\n      }else if(j===0){\n        rows.push(<th className=\"bg-slate-200 border-2 border-slate-300\">{i}</th>);\n      }\n      else{\n        rows.push(<Cell x={letters[j]} y={i.toString()} cell={{value:'', method:''}}/>);\n      }\n    } \n    columns.push([rows]); \n  }\n\n  const rendered = columns.map((column) => {\n    return <tr>{column}</tr>;\n  }); \n  \n\n  return (\n    <table>\n      <thead>\n        <tr>{heads}</tr>\n      </thead>\n      <tbody>\n        {rendered}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,SAASC,KAAK,OAAS;EAAA;EAAA,IAAR;IAACC,CAAC;IAAEC;EAAC,CAAC;EACnB,MAAMC,OAAO,GAAG,6BAA6B,CAACC,KAAK,CAAC,EAAE,CAAC;EACvD,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,KAAK,GAAG,EAAE;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EAErC,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIR,CAAC,EAAEQ,CAAC,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAG,EAAE;IACf,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,CAAC,EAAES,CAAC,EAAE,EAAC;MACzB,IAAIF,CAAC,KAAG,CAAC,EAAC;QACRH,KAAK,CAACM,IAAI,eAAC;UAAI,SAAS,EAAC,wCAAwC;UAAA,UAAET,OAAO,CAACQ,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,CAAC;MACvF,CAAC,MAAK,IAAGA,CAAC,KAAG,CAAC,EAAC;QACbD,IAAI,CAACE,IAAI,eAAC;UAAI,SAAS,EAAC,wCAAwC;UAAA,UAAEH;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM,CAAC;MAC5E,CAAC,MACG;QACFC,IAAI,CAACE,IAAI,eAAC,QAAC,IAAI;UAAC,CAAC,EAAET,OAAO,CAACQ,CAAC,CAAE;UAAC,CAAC,EAAEF,CAAC,CAACI,QAAQ,EAAG;UAAC,IAAI,EAAE;YAACC,KAAK,EAAC,EAAE;YAAEC,MAAM,EAAC;UAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,CAAC;MACjF;IACF;IACAV,OAAO,CAACO,IAAI,CAAC,CAACF,IAAI,CAAC,CAAC;EACtB;EAEA,MAAMM,QAAQ,GAAGX,OAAO,CAACY,GAAG,CAAEC,MAAM,IAAK;IACvC,oBAAO;MAAA,UAAKA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAC1B,CAAC,CAAC;EAGF,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UAAKZ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACV,eACR;MAAA,UACGU;IAAQ;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GArCQhB,KAAK;AAAA,KAALA,KAAK;AAuCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}