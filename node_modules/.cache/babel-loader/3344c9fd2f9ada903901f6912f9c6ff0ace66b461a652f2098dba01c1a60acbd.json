{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell() {\n  _s();\n  const [value, setValue] = useState('');\n  const handleChange = event => {\n    console.log(event.target.value);\n    setValue(event.target.value);\n  };\n  const handleBlur = () => {\n    if (value.startsWith('=')) {\n      //setValue(value.toString().replace('=',''))\n      console.log('equals');\n    }\n    console.log(value);\n    console.log(\"blured\");\n    doSum(value);\n  };\n  const doSum = val => {\n    console.log(val.indexOf('+'));\n    let index = val.indexOf('+');\n    let value1 = parseInt(val.slice(1, index));\n    let value2 = parseInt(val.slice(index + 1, val.length));\n    setValue(value1, value2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"input\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(Cell, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","value","setValue","handleChange","event","console","log","target","handleBlur","startsWith","doSum","val","indexOf","index","value1","parseInt","slice","value2","length"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell() {\n  const [value, setValue] = useState('')\n\n  const handleChange = (event) => {\n    console.log(event.target.value)\n    setValue(event.target.value)\n  }\n\n  const handleBlur = () => {\n    if (value.startsWith('=')){\n      //setValue(value.toString().replace('=',''))\n      console.log('equals')\n      \n    }\n    console.log(value)\n    console.log(\"blured\")\n    doSum(value)\n  }\n\n  const doSum = (val) => {\n    console.log(val.indexOf('+'))\n    let index = val.indexOf('+')\n    let value1 = parseInt(val.slice(1,index))\n    let value2 = parseInt(val.slice(index+1,val.length))\n    setValue(value1,value2)\n  }\n\n  return <input type=\"input\" value={value} onChange={handleChange} onBlur={handleBlur}></input>\n}\n\nexport default Cell;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC;IAC/BC,QAAQ,CAACE,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMO,UAAU,GAAG,MAAM;IACvB,IAAIP,KAAK,CAACQ,UAAU,CAAC,GAAG,CAAC,EAAC;MACxB;MACAJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEvB;IACAD,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClBI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBI,KAAK,CAACT,KAAK,CAAC;EACd,CAAC;EAED,MAAMS,KAAK,GAAIC,GAAG,IAAK;IACrBN,OAAO,CAACC,GAAG,CAACK,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAIC,KAAK,GAAGF,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC;IAC5B,IAAIE,MAAM,GAAGC,QAAQ,CAACJ,GAAG,CAACK,KAAK,CAAC,CAAC,EAACH,KAAK,CAAC,CAAC;IACzC,IAAII,MAAM,GAAGF,QAAQ,CAACJ,GAAG,CAACK,KAAK,CAACH,KAAK,GAAC,CAAC,EAACF,GAAG,CAACO,MAAM,CAAC,CAAC;IACpDhB,QAAQ,CAACY,MAAM,EAACG,MAAM,CAAC;EACzB,CAAC;EAED,oBAAO;IAAO,IAAI,EAAC,OAAO;IAAC,KAAK,EAAEhB,KAAM;IAAC,QAAQ,EAAEE,YAAa;IAAC,MAAM,EAAEK;EAAW;IAAA;IAAA;IAAA;EAAA,QAAS;AAC/F;AAAC,GA5BQR,IAAI;AAAA,KAAJA,IAAI;AA8Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}