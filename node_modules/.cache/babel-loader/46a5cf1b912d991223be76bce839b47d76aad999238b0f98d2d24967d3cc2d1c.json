{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(_ref) {\n  _s();\n  let {\n    x,\n    y\n  } = _ref;\n  const [value, setValue] = useState('');\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const handleBlur = () => {\n    if (value.startsWith('=')) {\n      doSum(value);\n    }\n    console.log(value);\n  };\n  const doSum = val => {\n    let index = val.indexOf('+');\n    checkCell(val.slice(1, index));\n    //setValue(parseInt(val.slice(1,index)) + parseInt(val.slice(index+1,val.length)))\n  };\n\n  const checkCell = num => {\n    // let toReturn = null;\n    // try {\n    //   toReturn = parseInt(num)\n    // } catch (error) {\n    console.log(num);\n    console.log(document.getElementById(num).getAttribute('type'));\n    //}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"tdinput border-2 border-slate-300\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${x}${y}`,\n      size: \"10\",\n      type: \"input\",\n      value: value,\n      onChange: handleChange,\n      onBlur: handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Cell, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","x","y","value","setValue","handleChange","event","target","handleBlur","startsWith","doSum","console","log","val","index","indexOf","checkCell","slice","num","document","getElementById","getAttribute"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell({x,y}) {\n  const [value, setValue] = useState('')\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const handleBlur = () => {\n    if (value.startsWith('=')){\n      doSum(value)\n    }\n    console.log(value)\n  }\n\n  const doSum = (val) => {\n    let index = val.indexOf('+')\n    checkCell(val.slice(1,index))\n    //setValue(parseInt(val.slice(1,index)) + parseInt(val.slice(index+1,val.length)))\n  }\n\n  const checkCell = (num) => {\n    // let toReturn = null;\n    // try {\n    //   toReturn = parseInt(num)\n    // } catch (error) {\n    console.log(num)\n    console.log(document.getElementById(num).getAttribute('type'));\n    //}\n  }\n\n  return (\n    <td className=\"tdinput border-2 border-slate-300\">\n      <input id={`${x}${y}`} size={\"10\"} type=\"input\" value={value} onChange={handleChange} onBlur={handleBlur}></input>\n    </td>\n  );\n}\n\nexport default Cell;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,IAAI,OAAQ;EAAA;EAAA,IAAP;IAACC,CAAC;IAACC;EAAC,CAAC;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMK,UAAU,GAAG,MAAM;IACvB,IAAIL,KAAK,CAACM,UAAU,CAAC,GAAG,CAAC,EAAC;MACxBC,KAAK,CAACP,KAAK,CAAC;IACd;IACAQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACpB,CAAC;EAED,MAAMO,KAAK,GAAIG,GAAG,IAAK;IACrB,IAAIC,KAAK,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;IAC5BC,SAAS,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAACH,KAAK,CAAC,CAAC;IAC7B;EACF,CAAC;;EAED,MAAME,SAAS,GAAIE,GAAG,IAAK;IACzB;IACA;IACA;IACA;IACAP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAChBP,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACC,cAAc,CAACF,GAAG,CAAC,CAACG,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9D;EACF,CAAC;;EAED,oBACE;IAAI,SAAS,EAAC,mCAAmC;IAAA,uBAC/C;MAAO,EAAE,EAAG,GAAEpB,CAAE,GAAEC,CAAE,EAAE;MAAC,IAAI,EAAE,IAAK;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAEC,KAAM;MAAC,QAAQ,EAAEE,YAAa;MAAC,MAAM,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC/G;AAET;AAAC,GAnCQR,IAAI;AAAA,KAAJA,IAAI;AAqCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}