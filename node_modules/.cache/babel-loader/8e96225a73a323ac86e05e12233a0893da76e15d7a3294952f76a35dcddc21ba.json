{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(_ref) {\n  let {\n    x,\n    y,\n    cells,\n    setCells\n  } = _ref;\n  const cell = cells[x][y];\n  const info = cell.info;\n  const handleChange = event => {\n    cells[x][y] = {\n      ...cells[x][y],\n      info: {\n        ...info,\n        method: value.toString()\n      }\n    };\n    setCells([...cells]);\n  };\n  const handleBlur = () => {\n    let sum = info.method;\n    //cell.method = value.toString();\n    //console.log(cell.method, cell.value)\n    if (value.toString().startsWith('=') && value.toString().length > 1) {\n      sum = doSum(value, 0);\n    } else {\n      //cell.value = value\n      cells[x][y] = {\n        ...cells[x][y],\n        info: {\n          value: sum,\n          method: value.toString()\n        }\n      };\n      setCells([...cells]);\n    }\n  };\n  const doSum = (val, sum) => {\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n    if (indexSum > indexSub) {\n      let indexAux = val.slice(indexSum + 1, val.length).indexOf('+');\n      if (indexAux > 0) {\n        sum += checkCell(val.slice(1, indexSum));\n        return doSum(val.slice(indexSum + 1, val.length), sum);\n      } else {\n        sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length));\n        return sum;\n        //cell.value = sum\n      }\n    } // else if (indexSub > indexSum) {\n    //cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    //}\n  };\n\n  const checkCell = num => {\n    let toReturn;\n    try {\n      toReturn = parseInt(document.getElementById(num).getAttribute('value'));\n    } catch (error) {\n      toReturn = parseInt(num);\n    }\n    return toReturn;\n  };\n  const handleDoubleClick = () => {\n    setValue(cell.method);\n    doSum(cell.method, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"tdinput border-2 border-slate-300\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${x}${y}`,\n      size: \"10\",\n      type: \"input\",\n      value: info.value,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      onDoubleClick: handleDoubleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","x","y","cells","setCells","cell","info","handleChange","event","method","value","toString","handleBlur","sum","startsWith","length","doSum","val","indexSum","indexOf","indexSub","indexAux","slice","checkCell","num","toReturn","parseInt","document","getElementById","getAttribute","error","handleDoubleClick","setValue"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell({ x, y, cells, setCells }) {\n  const cell = cells[x][y];\n  const info = cell.info;\n\n  const handleChange = (event) => {\n    cells[x][y] = { ...cells[x][y], info: { ...info, method: value.toString() } };\n    setCells([...cells])\n  }\n\n  const handleBlur = () => {\n    let sum = info.method;\n    //cell.method = value.toString();\n    //console.log(cell.method, cell.value)\n    if (value.toString().startsWith('=') && value.toString().length > 1) {\n      sum = doSum(value, 0);\n    } else {\n      //cell.value = value\n      cells[x][y] = { ...cells[x][y], info: { value: sum, method: value.toString() } };\n      setCells([...cells])\n    }\n  }\n\n  const doSum = (val, sum) => {\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n\n    if (indexSum > indexSub) {\n      let indexAux = val.slice(indexSum + 1, val.length).indexOf('+')\n      if (indexAux > 0) {\n        sum += checkCell(val.slice(1, indexSum));\n        return doSum(val.slice(indexSum + 1, val.length), sum);\n      } else {\n        sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length))\n        return sum\n        //cell.value = sum\n      }\n    }// else if (indexSub > indexSum) {\n    //cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    //}\n\n  }\n\n  const checkCell = (num) => {\n    let toReturn;\n    try {\n      toReturn = parseInt(document.getElementById(num).getAttribute('value'));\n    } catch (error) {\n      toReturn = parseInt(num);\n    }\n    return toReturn;\n  }\n\n  const handleDoubleClick = () => {\n    setValue(cell.method);\n    doSum(cell.method, 0)\n  }\n\n  return (\n    <td className=\"tdinput border-2 border-slate-300\">\n      <input id={`${x}${y}`} size={\"10\"} type=\"input\" value={info.value} onChange={handleChange} onBlur={handleBlur} onDoubleClick={handleDoubleClick}></input>\n    </td>\n  );\n}\n\nexport default Cell;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,IAAI,OAA4B;EAAA,IAA3B;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC;EAAS,CAAC;EACrC,MAAMC,IAAI,GAAGF,KAAK,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC;EACxB,MAAMI,IAAI,GAAGD,IAAI,CAACC,IAAI;EAEtB,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BL,KAAK,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG;MAAE,GAAGC,KAAK,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC;MAAEI,IAAI,EAAE;QAAE,GAAGA,IAAI;QAAEG,MAAM,EAAEC,KAAK,CAACC,QAAQ;MAAG;IAAE,CAAC;IAC7EP,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC;EACtB,CAAC;EAED,MAAMS,UAAU,GAAG,MAAM;IACvB,IAAIC,GAAG,GAAGP,IAAI,CAACG,MAAM;IACrB;IACA;IACA,IAAIC,KAAK,CAACC,QAAQ,EAAE,CAACG,UAAU,CAAC,GAAG,CAAC,IAAIJ,KAAK,CAACC,QAAQ,EAAE,CAACI,MAAM,GAAG,CAAC,EAAE;MACnEF,GAAG,GAAGG,KAAK,CAACN,KAAK,EAAE,CAAC,CAAC;IACvB,CAAC,MAAM;MACL;MACAP,KAAK,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG;QAAE,GAAGC,KAAK,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC;QAAEI,IAAI,EAAE;UAAEI,KAAK,EAAEG,GAAG;UAAEJ,MAAM,EAAEC,KAAK,CAACC,QAAQ;QAAG;MAAE,CAAC;MAChFP,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMa,KAAK,GAAG,CAACC,GAAG,EAAEJ,GAAG,KAAK;IAC1B,IAAIK,QAAQ,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;IAC/B,IAAIC,QAAQ,GAAGH,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;IAE/B,IAAID,QAAQ,GAAGE,QAAQ,EAAE;MACvB,IAAIC,QAAQ,GAAGJ,GAAG,CAACK,KAAK,CAACJ,QAAQ,GAAG,CAAC,EAAED,GAAG,CAACF,MAAM,CAAC,CAACI,OAAO,CAAC,GAAG,CAAC;MAC/D,IAAIE,QAAQ,GAAG,CAAC,EAAE;QAChBR,GAAG,IAAIU,SAAS,CAACN,GAAG,CAACK,KAAK,CAAC,CAAC,EAAEJ,QAAQ,CAAC,CAAC;QACxC,OAAOF,KAAK,CAACC,GAAG,CAACK,KAAK,CAACJ,QAAQ,GAAG,CAAC,EAAED,GAAG,CAACF,MAAM,CAAC,EAAEF,GAAG,CAAC;MACxD,CAAC,MAAM;QACLA,GAAG,IAAIU,SAAS,CAACN,GAAG,CAACK,KAAK,CAAC,CAAC,EAAEJ,QAAQ,CAAC,CAAC,GAAGK,SAAS,CAACN,GAAG,CAACK,KAAK,CAACJ,QAAQ,GAAG,CAAC,EAAED,GAAG,CAACF,MAAM,CAAC,CAAC;QACzF,OAAOF,GAAG;QACV;MACF;IACF,CAAC;IACD;IACA;EAEF,CAAC;;EAED,MAAMU,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAIC,QAAQ;IACZ,IAAI;MACFA,QAAQ,GAAGC,QAAQ,CAACC,QAAQ,CAACC,cAAc,CAACJ,GAAG,CAAC,CAACK,YAAY,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,QAAQ,GAAGC,QAAQ,CAACF,GAAG,CAAC;IAC1B;IACA,OAAOC,QAAQ;EACjB,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAM;IAC9BC,QAAQ,CAAC3B,IAAI,CAACI,MAAM,CAAC;IACrBO,KAAK,CAACX,IAAI,CAACI,MAAM,EAAE,CAAC,CAAC;EACvB,CAAC;EAED,oBACE;IAAI,SAAS,EAAC,mCAAmC;IAAA,uBAC/C;MAAO,EAAE,EAAG,GAAER,CAAE,GAAEC,CAAE,EAAE;MAAC,IAAI,EAAE,IAAK;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAEI,IAAI,CAACI,KAAM;MAAC,QAAQ,EAAEH,YAAa;MAAC,MAAM,EAAEK,UAAW;MAAC,aAAa,EAAEmB;IAAkB;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACtJ;AAET;AAAC,KA9DQ/B,IAAI;AAgEb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}