{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/React-course/spreadsheet/src/components/Cell.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(_ref) {\n  _s();\n  let {\n    x,\n    y,\n    cells,\n    setCells\n  } = _ref;\n  let cell = cells[x][y];\n  const info = cell.info;\n  const [isFocused, setIsFocused] = useState(false);\n  const handleChange = event => {\n    cells[x][y] = {\n      ...cell,\n      info: {\n        ...info,\n        method: event.target.value\n      }\n    };\n    setCells([...cells]);\n  };\n  const handleBlur = () => {\n    let sum = info.method;\n    if (info.method.startsWith('=') && info.method.length > 1) {\n      sum = doSum(info.method);\n    }\n    cells[x][y] = {\n      ...cell,\n      info: {\n        value: sum,\n        method: info.method\n      }\n    };\n    setCells([...cells]);\n    setIsFocused(false);\n  };\n  const doSum = val => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    val.replace('=', '');\n    let index = val.indexOf(letters);\n    console.log(index);\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n    let firstIndex;\n    if (indexSum < indexSub && indexSum >= 0) {\n      firstIndex = indexSum;\n    } else if (indexSub < indexSum && indexSub >= 0) {\n      firstIndex = indexSub;\n    } else {\n      return eval(val);\n    }\n    val = checkCell(val.slice(1, firstIndex)) + doSum(val.slice(firstIndex + 1, val.length));\n    return eval(val);\n\n    // if (indexSum > indexSub) {\n    //   let indexAux = val.slice(indexSum + 1, val.length).indexOf('+')\n    //   if (indexAux > 0) {\n    //     sum += checkCell(val.slice(1, indexSum));\n    //     return doSum(val.slice(indexSum + 1, val.length), sum);\n    //   } else {\n    //     sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length))\n    //     return sum\n    //     //cell.value = sum\n    //   }\n    // } else if (indexSub > indexSum) {\n    //   cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    // }\n  };\n\n  const checkCell = coord => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    let index = letters.indexOf(coord.slice(0, 1));\n    let toReturn;\n    if (index > 0) {\n      toReturn = cells[index][parseInt(coord.slice(1, 2))].info.value;\n    } else {\n      toReturn = coord;\n    }\n    return toReturn;\n  };\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"tdinput border-2 border-slate-300\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${x}${y}`,\n      size: \"10\",\n      type: \"input\",\n      value: isFocused ? info.method : info.value,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Cell, \"taoS6m9NZex5dx3pinefKTdpShE=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["useState","Cell","x","y","cells","setCells","cell","info","isFocused","setIsFocused","handleChange","event","method","target","value","handleBlur","sum","startsWith","length","doSum","val","letters","split","replace","index","indexOf","console","log","indexSum","indexSub","firstIndex","eval","checkCell","slice","coord","toReturn","parseInt","handleFocus"],"sources":["/Users/felipe/React-course/spreadsheet/src/components/Cell.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Cell({ x, y, cells, setCells }) {\n  let cell = cells[x][y];\n  const info = cell.info;\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleChange = (event) => {\n    cells[x][y] = { ...cell, info: { ...info, method: event.target.value } };\n    setCells([...cells])\n  }\n\n  const handleBlur = () => {\n    let sum = info.method;\n    if (info.method.startsWith('=') && info.method.length > 1) {\n      sum = doSum(info.method);\n    }\n    cells[x][y] = { ...cell, info: { value: sum, method: info.method } };\n    setCells([...cells])\n    setIsFocused(false);\n  }\n\n  const doSum = (val) => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    val.replace('=', '')\n    let index = val.indexOf(letters);\n    console.log(index)\n\n    let indexSum = val.indexOf('+');\n    let indexSub = val.indexOf('-');\n    let firstIndex;\n    if (indexSum < indexSub && indexSum >= 0) {\n      firstIndex = indexSum;\n    } else if (indexSub < indexSum && indexSub >= 0) {\n      firstIndex = indexSub;\n    } else {\n      return eval(val)\n    }\n    val = checkCell(val.slice(1, firstIndex)) + doSum(val.slice(firstIndex + 1, val.length));\n    return eval(val)\n\n    // if (indexSum > indexSub) {\n    //   let indexAux = val.slice(indexSum + 1, val.length).indexOf('+')\n    //   if (indexAux > 0) {\n    //     sum += checkCell(val.slice(1, indexSum));\n    //     return doSum(val.slice(indexSum + 1, val.length), sum);\n    //   } else {\n    //     sum += checkCell(val.slice(1, indexSum)) + checkCell(val.slice(indexSum + 1, val.length))\n    //     return sum\n    //     //cell.value = sum\n    //   }\n    // } else if (indexSub > indexSum) {\n    //   cell.value = (checkCell(val.slice(1, indexSub)) - checkCell(val.slice(indexSub + 1, val.length)));\n    // }\n\n  }\n\n  const checkCell = (coord) => {\n    const letters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    let index = letters.indexOf(coord.slice(0, 1));\n    let toReturn;\n    if (index > 0) {\n      toReturn = cells[index][parseInt(coord.slice(1, 2))].info.value;\n    } else {\n      toReturn = coord;\n    }\n    return toReturn;\n  }\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  }\n\n  return (\n    <td className=\"tdinput border-2 border-slate-300\">\n      <input id={`${x}${y}`} size={\"10\"} type=\"input\" value={isFocused ? info.method : info.value} onChange={handleChange} onBlur={handleBlur} onFocus={handleFocus}></input>\n    </td>\n  );\n}\n\nexport default Cell;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}